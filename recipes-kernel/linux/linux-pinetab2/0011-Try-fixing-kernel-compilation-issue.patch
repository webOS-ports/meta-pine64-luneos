From a561b29dcabd8c1d28110581823af0ad8f023b13 Mon Sep 17 00:00:00 2001
From: Herman van Hazendonk <github.com@herrie.org>
Date: Fri, 12 Jan 2024 11:20:21 +0100
Subject: [PATCH] Try fixing kernel compilation issue

As per https://github.com/CmST0us/luckfox-pico/blob/3e36e1cd2e7f8afe65c6d2b04dac680b1cc567ed/sysdrv/drv_ko/wifi/atbm/hal_apollo/main.c

Signed-off-by: Herman van Hazendonk <github.com@herrie.org>
---
Upstream-Status: Pending

 drivers/staging/bes2600/main.c | 51 ++++++++++++++++++++++++++++++++--
 1 file changed, 48 insertions(+), 3 deletions(-)

diff --git a/drivers/staging/bes2600/main.c b/drivers/staging/bes2600/main.c
index f7cb35ddab74..9a662b4639db 100644
--- a/drivers/staging/bes2600/main.c
+++ b/drivers/staging/bes2600/main.c
@@ -923,8 +923,9 @@ int access_file(char *path, char *buffer, int size, int isRead)
 {
 	int ret=0;
 	struct file *fp;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 8, 0))
 	mm_segment_t old_fs = get_fs();
-
+#endif
 	if(isRead)
 		fp = filp_open(path,O_RDONLY,S_IRUSR);
 	else
@@ -935,16 +936,60 @@ int access_file(char *path, char *buffer, int size, int isRead)
 		return -1;
 	}
 
-	if (isRead) {
+	if(isRead)
+	{
+#if 0
+		if(fp->f_op->read == NULL) {
+			bes2600_info(BES2600_DBG_INIT, "BES2600 : not allowed to read\n");
+			return -2;
+		}
+		else
+#endif
+		{
 			fp->f_pos = 0;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 8, 0))
 			set_fs(KERNEL_DS);
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0))
+			ret = kernel_read(fp,buffer,size,&fp->f_pos);
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 84))
+			ret = kernel_read(fp,fp->f_pos,buffer,size);
+
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 14))
+			ret = kernel_read(fp,&fp->f_pos,buffer,size);
+#else
 			ret = vfs_read(fp,buffer,size,&fp->f_pos);
+#endif
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 8, 0))
 			set_fs(old_fs);
-	} else {
+#endif
+		}
+	}
+	else
+	{
+		if(fp->f_op->write == NULL) {
+			bes2600_info(BES2600_DBG_INIT, "BES2600 : not allowed to write\n");
+			return -2;
+		}
+		else {
 			fp->f_pos = 0;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 8, 0))
 			set_fs(KERNEL_DS);
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0))
+			ret = kernel_write(fp,buffer,size,&fp->f_pos);
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 84))
+			ret = kernel_write(fp,buffer,size,fp->f_pos);
+
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 14))
+			ret = kernel_write(fp,&fp->f_pos,buffer,size);
+#else
 			ret = vfs_write(fp,buffer,size,&fp->f_pos);
+#endif
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 8, 0))
 			set_fs(old_fs);
+#endif
+		}
 	}
 	filp_close(fp,NULL);
 
